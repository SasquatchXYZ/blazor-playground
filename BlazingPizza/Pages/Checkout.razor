@page "/checkout"
@using BlazingPizza.Model
@using BlazingPizza.Services
@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="main">
    <EditForm Model="Order.DeliveryAddress" OnValidSubmit="PlaceOrder">
        <div class="checkout-cols">
            <div class="checkout-order-details">
                <h4>Review Order</h4>
                <OrderReview Order="Order"/>
            </div>

            <div class="checkout-delivery-address">
                <h4>Deliver to...</h4>
                @if (_isError)
                {
                    <div class="alert alert-danger">Please enter a name and address.</div>
                }
                <AddressEditor Address="Order.DeliveryAddress"/>
            </div>
        </div>

        <button class="checkout-button btn btn-warning" disabled="@_isSubmitting">
            Place Order
        </button>
        <ValidationSummary/>
        <DataAnnotationsValidator/>
    </EditForm>
</div>

@code
{
    bool _isError = false;
    Order Order => OrderState.Order;
    bool _isSubmitting;

    async Task PlaceOrder()
    {
        var response = await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri + "orders", OrderState.Order);
        var newOrderId = await response.Content.ReadFromJsonAsync<int>();
        OrderState.ResetOrder();
        NavigationManager.NavigateTo($"/myorders/{newOrderId}");
    }
}
